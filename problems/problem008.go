package problems

import (
	"strconv"
)

func LargestProductInSeries(size int) uint64 {
	number := "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064448664523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666888116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

	// Creamos la variable que almacena el producto mas grande
	maxProduct := 0

	for i := 0; i <= len(number)-size; i++ {
		// Creamos segmentos del tamaño dado
		segment := number[i : i+size]
		product := 1

		// Convertimos cada caraceter del segmento en un dígito
		for j := 0; j < size; j++ {
			// Convertimus la runa en cadena
			digit, _ := strconv.Atoi(string(segment[j]))
			// multiplicamos el dígito por el producto
			product *= digit
		}

		// comparamos el producto obtenido con el maxProduct
		if product > maxProduct {
			maxProduct = product
		}
	}

	return uint64(maxProduct)
}
